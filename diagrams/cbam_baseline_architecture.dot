digraph CBamBaseline {
    // Graph configuration
    rankdir=LR;
    node [shape=box, style=filled, fontname="Arial", fontsize=10];
    edge [fontname="Arial", fontsize=9];
    
    // Title
    label="FeatherFace CBAM Baseline Architecture (488,664 parameters)";
    labelloc="t";
    fontsize=14;
    fontname="Arial Bold";
    
    // Input
    input [label="Input Image\n640×640×3", fillcolor="#E8F4FD", color="#1E88E5"];
    
    // Backbone
    subgraph cluster_backbone {
        label="MobileNetV1-0.25 Backbone";
        style=filled;
        fillcolor="#FFF3E0";
        color="#F57C00";
        
        mobilenet [label="MobileNetV1-0.25\n213,072 params\n(43.6%)", fillcolor="#FFE0B2"];
        stage1 [label="Stage 1\nP3/8", fillcolor="#FFCC80"];
        stage2 [label="Stage 2\nP4/16", fillcolor="#FFCC80"];
        stage3 [label="Stage 3\nP5/32", fillcolor="#FFCC80"];
    }
    
    // Backbone CBAM Attention
    subgraph cluster_backbone_cbam {
        label="Backbone CBAM Attention";
        style=filled;
        fillcolor="#FDE7F3";
        color="#E91E63";
        
        backbone_cbam1 [label="CBAM\n64 ch\n2,164 params", fillcolor="#F8BBD9"];
        backbone_cbam2 [label="CBAM\n128 ch\n2,208 params", fillcolor="#F8BBD9"];
        backbone_cbam3 [label="CBAM\n256 ch\n2,296 params", fillcolor="#F8BBD9"];
    }
    
    // Feature Pyramid Network
    subgraph cluster_fpn {
        label="BiFPN Feature Pyramid";
        style=filled;
        fillcolor="#E8F5E8";
        color="#4CAF50";
        
        bifpn [label="BiFPN\n75,246 params\n(15.4%)", fillcolor="#C8E6C8"];
        p3_out [label="P3 Features\nout_channel=52", fillcolor="#A5D6A7"];
        p4_out [label="P4 Features\nout_channel=52", fillcolor="#A5D6A7"];
        p5_out [label="P5 Features\nout_channel=52", fillcolor="#A5D6A7"];
    }
    
    // BiFPN CBAM Attention
    subgraph cluster_bifpn_cbam {
        label="BiFPN CBAM Attention";
        style=filled;
        fillcolor="#FDE7F3";
        color="#E91E63";
        
        bifpn_cbam1 [label="CBAM\n52 ch\nP3\n2,152 params", fillcolor="#F8BBD9"];
        bifpn_cbam2 [label="CBAM\n52 ch\nP4\n2,152 params", fillcolor="#F8BBD9"];
        bifpn_cbam3 [label="CBAM\n52 ch\nP5\n2,152 params", fillcolor="#F8BBD9"];
    }
    
    // SSH Detection Heads
    subgraph cluster_ssh {
        label="SSH Detection Heads";
        style=filled;
        fillcolor="#EDE7F6";
        color="#673AB7";
        
        ssh1 [label="SSH1\n64,185 params\n(13.1%)", fillcolor="#D1C4E9"];
        ssh2 [label="SSH2\n64,185 params\n(13.1%)", fillcolor="#D1C4E9"];
        ssh3 [label="SSH3\n64,185 params\n(13.1%)", fillcolor="#D1C4E9"];
    }
    
    // Channel Shuffle
    subgraph cluster_shuffle {
        label="Channel Shuffle Optimization";
        style=filled;
        fillcolor="#F3E5F5";
        color="#9C27B0";
        
        cs1 [label="CS1\n0 params", fillcolor="#E1BEE7"];
        cs2 [label="CS2\n0 params", fillcolor="#E1BEE7"];
        cs3 [label="CS3\n0 params", fillcolor="#E1BEE7"];
    }
    
    // Output Heads
    subgraph cluster_outputs {
        label="Detection Outputs";
        style=filled;
        fillcolor="#FFF8E1";
        color="#FF9800";
        
        class_head [label="Classification\n684 params\n(0.1%)", fillcolor="#FFECB3"];
        bbox_head [label="BBox Regression\n1,368 params\n(0.3%)", fillcolor="#FFECB3"];
        landmark_head [label="Landmarks\n3,420 params\n(0.7%)", fillcolor="#FFECB3"];
    }
    
    // Final Outputs
    output [label="Face Detection\nResults", fillcolor="#FFCDD2", color="#F44336"];
    
    // CBAM Module Detail
    subgraph cluster_cbam_detail {
        label="CBAM Module Detail";
        style=filled;
        fillcolor="#F0F4FF";
        color="#3F51B5";
        
        detail_input [label="Input Feature\nX ∈ ℝ^(B×C×H×W)", fillcolor="#E8EAF6", shape=ellipse];
        
        // Channel Attention Module (CAM)
        subgraph cluster_cam {
            label="Channel Attention Module (CAM)";
            style=filled;
            fillcolor="#FDE7F3";
            
            cam_gap [label="GAP", fillcolor="#F8BBD9"];
            cam_gmp [label="GMP", fillcolor="#F8BBD9"];
            cam_fc1 [label="FC\nC/16", fillcolor="#F8BBD9"];
            cam_fc2 [label="FC\nC", fillcolor="#F8BBD9"];
            cam_sigmoid [label="Sigmoid", fillcolor="#F8BBD9"];
        }
        
        cam_intermediate [label="F₁ ∈ ℝ^(B×C×H×W)", fillcolor="#FFF9C4", shape=ellipse];
        
        // Spatial Attention Module (SAM)
        subgraph cluster_sam {
            label="Spatial Attention Module (SAM)";
            style=filled;
            fillcolor="#E3F2FD";
            
            sam_avgpool [label="AvgPool\n(Channel)", fillcolor="#BBDEFB"];
            sam_maxpool [label="MaxPool\n(Channel)", fillcolor="#BBDEFB"];
            sam_concat [label="Concat", fillcolor="#BBDEFB"];
            sam_conv7x7 [label="Conv2D\n7×7", fillcolor="#BBDEFB"];
            sam_sigmoid [label="Sigmoid", fillcolor="#BBDEFB"];
        }
        
        detail_output [label="Output Feature\nY ∈ ℝ^(B×C×H×W)", fillcolor="#E8EAF6", shape=ellipse];
        
        // CBAM Detail Connections
        detail_input -> cam_gap;
        detail_input -> cam_gmp;
        cam_gap -> cam_fc1;
        cam_gmp -> cam_fc1;
        cam_fc1 -> cam_fc2;
        cam_fc2 -> cam_sigmoid;
        cam_sigmoid -> cam_intermediate [label="Channel\nAttention"];
        
        cam_intermediate -> sam_avgpool;
        cam_intermediate -> sam_maxpool;
        sam_avgpool -> sam_concat;
        sam_maxpool -> sam_concat;
        sam_concat -> sam_conv7x7;
        sam_conv7x7 -> sam_sigmoid;
        sam_sigmoid -> detail_output [label="Spatial\nAttention"];
    }
    
    // Connections
    input -> mobilenet;
    
    mobilenet -> stage1;
    mobilenet -> stage2;
    mobilenet -> stage3;
    
    stage1 -> backbone_cbam1;
    stage2 -> backbone_cbam2;
    stage3 -> backbone_cbam3;
    
    backbone_cbam1 -> bifpn;
    backbone_cbam2 -> bifpn;
    backbone_cbam3 -> bifpn;
    
    bifpn -> p3_out;
    bifpn -> p4_out;
    bifpn -> p5_out;
    
    p3_out -> bifpn_cbam1;
    p4_out -> bifpn_cbam2;
    p5_out -> bifpn_cbam3;
    
    bifpn_cbam1 -> ssh1;
    bifpn_cbam2 -> ssh2;
    bifpn_cbam3 -> ssh3;
    
    ssh1 -> cs1;
    ssh2 -> cs2;
    ssh3 -> cs3;
    
    cs1 -> class_head;
    cs1 -> bbox_head;
    cs1 -> landmark_head;
    cs2 -> class_head;
    cs2 -> bbox_head;
    cs2 -> landmark_head;
    cs3 -> class_head;
    cs3 -> bbox_head;
    cs3 -> landmark_head;
    
    class_head -> output;
    bbox_head -> output;
    landmark_head -> output;
}